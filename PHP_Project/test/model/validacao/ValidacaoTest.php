<?php

require_once dirname(__FILE__) . '/../../../model/validacao/Validacao.php';
include '../../../exception/ValidacaoException.php';

/**
 * Test class for Validacao.
 * Generated by PHPUnit on 2013-08-20 at 07:55:09.
 */
class ValidacaoTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Validacao
     */
    private $validacao;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->validacao = new Validacao();
    }

    /**
     * @covers Validacao::validarCaracteres
     * @covers Validacao::caracteresInvalidos
     * @todo Implement testeCaracteresValidos().
     */
    public function testeCaracteresValidos() {
        // Remove the following lines when you implement this test.
        $caracteres = "aBc";
        $caracteresValidos = "abcdef";
        $this->validacao->validarCaracteres($caracteres, $caracteresValidos);
    }
    
    /**
     * @expectedException ValidacaoException
     * @covers Validacao::validarCaracteres
     * @covers Validacao::caracteresInvalidos
     * @todo Implement testeCaracteresInvalidos().
     */
    public function testeCaracteresInvalidos() {
        // Remove the following lines when you implement this test.
        $caracteres = "aBc";
        $caracteresValidos = "bcdef";
        $this->validacao->validarCaracteres($caracteres, $caracteresValidos);
    }
    
    /**
     * @covers Validacao::validarNumeroDeCaracteres
     * @todo Implement testeNumeroDeCaracteresValido().
     */
    public function testeNumeroDeCaracteresValido() {
        // Remove the following lines when you implement this test.
        $caracteres = "aBcD";
        $tamanhoMinimo = 3;
        $tamanhoMaximo = 7;
        $this->validacao->validarNumeroDeCaracteres($caracteres, $tamanhoMinimo, $tamanhoMaximo);
    }
    
    /**
     * @expectedException ValidacaoException
     * @covers Validacao::validarNumeroDeCaracteres
     * @todo Implement testeNumeroDeCaracteresValido().
     */
    public function testeNumeroDeCaracteresInvalidoNoTamanhoMinimo() {
        // Remove the following lines when you implement this test.
        $caracteres = "aBcD";
        $tamanhoMinimo = 7;
        $tamanhoMaximo = 10;
        $this->validacao->validarNumeroDeCaracteres($caracteres, $tamanhoMinimo, $tamanhoMaximo);
    }
    
    /**
     * @expectedException ValidacaoException
     * @covers Validacao::validarNumeroDeCaracteres
     * @todo Implement testeNumeroDeCaracteresValido().
     */
    public function testeNumeroDeCaracteresInvalidoNoTamanhoMaximo() {
        // Remove the following lines when you implement this test.
        $caracteres = "aBcD";
        $tamanhoMinimo = 1;
        $tamanhoMaximo = 3;
        $this->validacao->validarNumeroDeCaracteres($caracteres, $tamanhoMinimo, $tamanhoMaximo);
    }
    
    /**
     * @covers Validacao::validarIntervalo
     * @todo Implement testeValorValidoNoIntervalo().
     */
    public function testeValorValidoNoIntervalo() {
        // Remove the following lines when you implement this test.
        $valor = 10;
        $limiteInferior = 9;
        $limiteSuperior = 11;
        $this->validacao->validarIntervalo($valor, $limiteInferior, $limiteSuperior);
    }
    
    /**
     * @expectedException ValidacaoException
     * @covers Validacao::validarIntervalo
     * @todo Implement testeValorInvalidoNoIntervaloParaLimiteInferior().
     */
    public function testeValorInvalidoNoIntervaloParaLimiteInferior() {
        // Remove the following lines when you implement this test.
        $valor = 10;
        $limiteInferior = 11;
        $limiteSuperior = 12;
        $this->validacao->validarIntervalo($valor, $limiteInferior, $limiteSuperior);
    }
    
    /**
     * @expectedException ValidacaoException
     * @covers Validacao::validarIntervalo
     * @todo Implement testeValorInvalidoNoIntervaloParaLimiteInferior().
     */
    public function testeValorInvalidoNoIntervaloParaLimiteSuperior() {
        // Remove the following lines when you implement this test.
        $valor = 10;
        $limiteInferior = 8;
        $limiteSuperior = 9;
        $this->validacao->validarIntervalo($valor, $limiteInferior, $limiteSuperior);
    }
}

?>
